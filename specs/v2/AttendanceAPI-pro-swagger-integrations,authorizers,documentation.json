{
	"swagger": "2.0",
	"info": {
		"version": "2017-02-04T05:21:19Z",
		"title": "AttendanceAPI"
	},
	"tags": [{
		"name": "Learner Apis",
		"description": "Apis involved in learner activities."
	},{
		"name": "Trainer Apis",
		"description": "Apis involved in trainer activities."
	},{
		"name": "DB Logs Apis",
		"description": "Apis to retrieve logs from DB."
	},{
		"name": "Options",
		"description": "Preflight handler."
	}],
	"host": "bk22lc2fh1.execute-api.us-west-2.amazonaws.com",
	"basePath": "/pro",
	"schemes": [
		"https"
	],
	"paths": {
		"/attendance/logs/attendance-logs": {
			"get": {
				"tags": ["DB Logs Apis"],
				"description": "Attendance logs that mainly track the status of the workflow and log the errors if workflow failed.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "class_rm_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Class room ID provided by client and this ID has to map in BMS."
					},
					{
						"name": "taskId",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
					}
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/AttendanceLogsOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\n    \"class_rm_id\": \"$input.params('class_rm_id')\",\n    \"taskId\": \"$input.params('taskId')\"\n}"
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:AttendanceLogs/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"passthroughBehavior": "when_no_match",
					"type": "mock"
				}
			}
		},
		"/attendance/logs/attendance-records": {
			"get": {
				"tags": ["DB Logs Apis"],
				"description": "The workflow creates the attendance record for mobile device to response, the record ID will send to mobile device via aws sns push notification. By default the 'ATTEND' value is 'false' and once the mobile device is present in the attendance range, the value will change to 'true'.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "class_rm_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Class room ID provided by client and this ID has to map in BMS."
					},
					{
						"name": "taskId",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
					}
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/AttendanceRecordsOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\n    \"class_rm_id\": \"$input.params('class_rm_id')\",\n    \"taskId\": \"$input.params('taskId')\"\n}"
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:AttendanceRecords/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"passthroughBehavior": "when_no_match",
					"type": "mock"
				}
			}
		},
		"/attendance/logs/attendance-results": {
			"get": {
				"tags": ["DB Logs Apis"],
				"description": "The attendance results calculated based on attendance records.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "class_rm_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Class room ID provided by client and this ID has to map in BMS."
					},
					{
						"name": "taskId",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
					}
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/AttendanceResultsOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\n    \"class_rm_id\": \"$input.params('class_rm_id')\",\n    \"taskId\": \"$input.params('taskId')\"\n}"
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:AttendanceResults/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"passthroughBehavior": "when_no_match",
					"type": "mock"
				}
			}
		},
		"/attendance/logs/attendance-tasks": {
			"get": {
				"tags": ["DB Logs Apis"],
				"description": "High level view of attendance workflow to see the start and end time.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "class_rm_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Class room ID provided by client and this ID has to map in BMS."
					},
					{
						"name": "taskId",
						"in": "query",
						"required": false,
						"type": "string",
						"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
					}
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/AttendanceTasksOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\n    \"class_rm_id\": \"$input.params('class_rm_id')\",\n    \"taskId\": \"$input.params('taskId')\"\n}"
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:AttendanceTasks/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"passthroughBehavior": "when_no_match",
					"type": "mock"
				}
			}
		},
		"/attendance/sns/exchange": {
			"post": {
				"tags": ["Learner Apis", "Trainer Apis"],
				"description": "Exchange mobile device token with AWS SNS arn to enable SNS push notification.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Exchange device token with aws sns arn",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ExchangeIn"
					}
				}],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/ExchangeOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"400": {
						"description": "400 response"
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						},
						".*bad request.*": {
							"statusCode": "400",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:ExchangePushToken/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"passthroughBehavior": "when_no_match",
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"type": "mock"
				}
			}
		},
		"/attendance/sns/push": {
			"post": {
				"tags": ["Trainer Apis"],
				"description": "Push notificaiton to mobile device via AWS SNS with endpoint arn.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Push notification to arns",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PushIn"
					}
				}],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/PushOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:PushNotification/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"passthroughBehavior": "when_no_match",
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"type": "mock"
				}
			}
		},
		"/attendance/start": {
			"post": {
				"tags": ["Trainer Apis"],
				"description": "Start the attendance taking workflow.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Start take attendance workflow",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AttendanceStartIn"
					}
				}],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/AttendanceStartOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"404": {
						"description": "404 response"
					},
					"409": {
						"description": "409 response"
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						},
						"default": {
							"statusCode": "200"
						},
						".*conflict.*": {
							"statusCode": "409",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						},
						".*not found.*": {
							"statusCode": "404",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:StartTask/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"passthroughBehavior": "when_no_match",
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"type": "mock"
				}
			}
		},
		"/attendance/stop": {
			"post": {
				"tags": ["Trainer Apis"],
				"description": "Stop the attendance taking workflow.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Stop take attendance workflow",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AttendanceStopIn"
					}
				}],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/AttendanceStopOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"202": {
						"description": "202 response"
					},
					"404": {
						"description": "404 response"
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						},
						"default": {
							"statusCode": "200"
						},
						".*accepted.*": {
							"statusCode": "202",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						},
						".*not found.*": {
							"statusCode": "404",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:StopTask/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"passthroughBehavior": "when_no_match",
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"type": "mock"
				}
			}
		},
		"/attendance/take": {
			"post": {
				"tags": ["Learner Apis"],
				"description": "Mobile device report attendance status back to attendance records.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "Take attendance",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TakeAttendanceIn"
					}
				}],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/TakeAttendanceOut"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							}
						}
					},
					"400": {
						"description": "400 response"
					},
					"500": {
						"description": "500 response"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						},
						".*system.*": {
							"statusCode": "500",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						},
						".*bad request.*": {
							"statusCode": "400",
							"responseTemplates": {
								"application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"message\" : \"$inputRoot.errorMessage\"\n}"
							}
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:788170495069:function:TakeAttendance/invocations",
					"passthroughBehavior": "when_no_templates",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws"
				}
			},
			"options": {
				"tags": ["Options"],
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "200 response",
						"schema": {
							"$ref": "#/definitions/Empty"
						},
						"headers": {
							"Access-Control-Allow-Origin": {
								"type": "string"
							},
							"Access-Control-Allow-Methods": {
								"type": "string"
							},
							"Access-Control-Allow-Headers": {
								"type": "string"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200",
							"responseParameters": {
								"method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
								"method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
								"method.response.header.Access-Control-Allow-Origin": "'*'"
							}
						}
					},
					"passthroughBehavior": "when_no_match",
					"requestTemplates": {
						"application/json": "{\"statusCode\": 200}"
					},
					"type": "mock"
				}
			}
		}
	},
	"definitions": {
		"Empty": {
			"type": "object",
			"title": "Empty Schema"
		},
		"AttendanceLogsOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status"
				},
				"data": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"LOG_ID": {
								"type": "string",
								"example": "log_id_1486185835932",
								"description": "System generated log id."
							},
							"TASK_ID": {
								"type": "string",
								"example": "task_id_1486185698203",
								"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
							},
							"CLASS_RM_ID": {
								"type": "string",
								"example": "27",
								"description": "Class room ID provided by client and this ID has to map in BMS."
							},
							"SUCCESS": {
								"type": "boolean",
								"example": true,
								"description": "'true' means the attendance workflow succeed, else 'false' means the attendance workflow failed."
							},
							"MESSAGE": {
								"type": "string",
								"example": "completed",
								"description": "Text description / remark of the log."
							},
							"DATE": {
								"type": "string",
								"example": "2017-02-04T05:23:55.941Z",
								"description": "Log date."
							}
						}
					},
					"description": "Array of retrieved log data from Dynamo DB."
				}
			}
		},
		"AttendanceRecordsOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status"
				},
				"data": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"RECORD_ID": {
								"type": "string",
								"example": "record_id_14861179043901",
								"description": "System generated record id."
							},
							"TASK_ID": {
								"type": "string",
								"example": "task_id_1486185698203",
								"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
							},
							"CLASS_RM_ID": {
								"type": "string",
								"example": "27",
								"description": "Class room ID provided by client and this ID has to map in BMS."
							},
							"ATTEND": {
								"type": "boolean",
								"example": true,
								"description": "'true' means the record has received corresponding attendance taking from mobile device, else means the mobile device absent."
							},
							"USER_ID": {
								"type": "string",
								"example": "user_id_002",
								"description": "User ID provided by client, the final attendance results are tie to corresponding userIds."
							},
							"DATE": {
								"type": "string",
								"example": "2017-02-04T05:23:55.941Z",
								"description": "Record date."
							}
						}
					},
					"description": "Array of retrieved record data from Dynamo DB."
				}
			}
		},
		"AttendanceResultsOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status"
				},
				"data": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"RESULT_ID": {
								"type": "string",
								"example": "record_id_14861179043901",
								"description": "System generated result id."
							},
							"TASK_ID": {
								"type": "string",
								"example": "task_id_1486185698203",
								"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
							},
							"CLASS_RM_ID": {
								"type": "string",
								"example": "27",
								"description": "Class room ID provided by client and this ID has to map in BMS."
							},
							"RESULTS": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"userId": {
											"type": "string",
											"example": "user_id_001",
											"description": "User ID provided by client, the final attendance results are tie to corresponding userIds."
										},
										"attendance": {
											"type": "double",
											"example": 0.96,
											"description": "Attendance results of the user for the workflow."
										}
									}
								},
								"description": "List of attendance result for all users."
							},
							"DATE": {
								"type": "string",
								"example": "2017-02-05T05:13:37.941Z",
								"description": "Record date."
							}
						}
					},
					"description": "Array of retrieved record data from Dynamo DB."
				}
			}
		},
		"AttendanceTasksOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status"
				},
				"data": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"TASK_ID": {
								"type": "string",
								"example": "task_id_1486185698203",
								"description": "Unique task ID generated by attendance workflow to identify each attendance task. This ID is also required to stop an attendance taking workflow."
							},
							"CLASS_RM_ID": {
								"type": "string",
								"example": "27",
								"description": "Class room ID provided by client and this ID has to map in BMS."
							},
							"STATUS_T": {
								"type": "string",
								"example": "stopped",
								"description": "Status of the attendance taking workflow. E.g. 'running', 'stopping', 'stopped'"
							},
							"START_DATE": {
								"type": "string",
								"example": "2017-02-03T10:50:40.479Z",
								"description": "Start date of the workflow."
							},
							"END_DATE": {
								"type": "string",
								"example": "2017-02-03T10:51:23.224Z",
								"description": "End date of the workflow."
							}
						}
					},
					"description": "Array of retrieved record data from Dynamo DB."
				}
			}
		},
		"ExchangeIn": {
			"type": "object",
			"required": [
				"token", "platform"
			],
			"properties": {
				"token": {
					"type": "string",
					"example": "d45a69d29ac35d1373f182f635fd0228f07030578d1d142297983589981ae61a",
					"description": "Device token get from device native api."
				},
				"platform": {
					"type": "string",
					"example": "apns_sandbox",
					"description": "Platform of push application. E.g. 'apns' is Apple push notification production, 'gcm' is Google butt messaging service."
				}
			}
		},
		"ExchangeOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status"
				},
				"EndpointArn": {
					"type": "string",
					"example": "arn:aws:sns:us-west-2:788170495069:endpoint/APNS_SANDBOX/Attendance_Push_Dev/0c9bfea0-efdd-3240-aa65-2c6726c54612",
					"description": "Exchange endpoint arn for future push purpose."
				}
			}
		},
		"PushIn": {
			"type": "object",
			"required": [
				"arns"
			],
			"properties": {
				"title": {
					"type": "string",
					"example": "sample_title",
					"description": "Push title"
				},
				"text": {
					"type": "string",
					"example": "sample_text",
					"description": "Push message"
				},
				"actionId": {
					"type": "string",
					"example": "action_notification",
					"description": "This value is pre defined ID for mobile to choose which action to be done. E.g. 'action_notification' is reserved for push notification and 'action_take_attendance' is reserved for call4Attendance() logic in SDK."
				},
				"arns": {
					"type": "array",
					"items": {
						"type": "string",
						"example": "arn:aws:sns:us-west-2:788170495069:endpoint/APNS_SANDBOX/Attendance_Push_Dev/b5fdaa22-3af9-333c-90e5-21d90a0f3637"
					},
					"description": "Array of endpoint arns for aws sns push."
				},
				"data": {
					"type": "object",
					"properties": {
						"key": {
							"type": "string",
							"example": "value"
						}
					},
					"description": "Key value pair of hidden data wants to send to mobile device via push notification."
				}
			}
		},
		"PushOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status"
				},
				"message": {
					"type": "string",
					"example": "done",
					"description": "Success message"
				}
			}
		},
		"AttendanceStartIn": {
			"type": "object",
			"required": [
				"class_rm_id", "delay_sec", "users"
			],
			"properties": {
				"class_rm_id": {
					"type": "string",
					"example": "27",
					"description": "Class room ID provided by client and this ID has to map in BMS."
				},
				"delay_sec": {
					"type": "integer",
					"example": 10,
					"description": "Delay / waiting period between each attendance cold call in attendance taking workflow."
				},
				"users": {
					"type": "array",
					"items": {
						"type": "object",
						"required": [
							"userId", "token"
						],
						"properties": {
							"userId": {
								"type": "string",
								"example": "user_id_001",
								"description": "User ID provided by client, the final attendance results are tie to corresponding userIds."
							},
							"token": {
								"type": "string",
								"example": "arn:aws:sns:us-west-2:788170495069:endpoint/APNS_SANDBOX/Attendance_Push_Dev/b5fdaa22-3af9-333c-90e5-21d90a0f3637",
								"description": "Aws sns endpoint arn for each user. It is exchanged using exchange api and stored by client."
							}
						}
					},
					"description": "Array of user object."
				}
			}
		},
		"AttendanceStartOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status."
				},
				"data": {
					"type": "object",
					"properties": {
						"executionArn": {
							"type": "string",
							"example": "arn:aws:states:us-west-2:788170495069:execution:Attendance_Taking:36fd69b7-c66e-43a8-ad28-e40c1c271025",
							"description": "Step Functions execution arn from aws."
						},
						"startDate": {
							"type": "string",
							"example": "2017-02-04T07:45:26.893Z",
							"description": "Start date of the workflow."
						},
						"taskId": {
							"type": "string",
							"example": "task_id_1486194326764",
							"description": "Unique task identifier use to stop the workflow."
						}
					}
				}
			}
		},
		"AttendanceStopIn": {
			"type": "object",
			"required": [
				"taskId"
			],
			"properties": {
				"taskId": {
					"type": "string",
					"example": "task_id_1486195282225",
					"description": "Task identifier get from start workflow api."
				}
			}
		},
		"AttendanceStopOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status."
				},
				"data": {
					"type": "object",
					"properties": {
						"Attributes": {
							"type": "object",
							"properties": {
								"END_DATE": {
									"type": "string",
									"example": "2017-02-04T08:01:40.344Z",
									"description": "End date of the workflow."
								},
								"STATUS_T": {
									"type": "string",
									"example": "stopping",
									"description": "Status of workflow."
								}
							}
						}
					}
				}
			}
		},
		"TakeAttendanceIn": {
			"type": "object",
			"required": [
				"recordId"
			],
			"properties": {
				"recordId": {
					"type": "string",
					"example": "record_id_14861943267641",
					"description": "Attendance record ID generated by workflow and send to user via push notification."
				}
			}
		},
		"TakeAttendanceOut": {
			"type": "object",
			"properties": {
				"status": {
					"type": "integer",
					"example": 200,
					"description": "Success status."
				},
				"data": {
					"type": "object",
					"properties": {
						"Attributes": {
							"type": "object",
							"properties": {
								"ATTEND": {
									"type": "boolean",
									"example": true,
									"description": "Record status. E.g. 'true' means attended, default value is 'false'."
								}
							}
						}
					}
				}
			}
		},
		"Error400": {
			"type": "object",
			"properties": {
				"message": {
					"type": "string",
					"example": "bad request: missing input..."
				}
			}
		}
	}
}